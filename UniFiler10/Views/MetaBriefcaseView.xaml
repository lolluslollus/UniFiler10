<ctl:ObservableControl
    x:Class="UniFiler10.Views.MetaBriefcaseView"
    x:Name="me"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UniFiler10.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:utilz="using:Utilz"
    xmlns:ctl="using:UniFiler10.Controlz"
	xmlns:metadata="using:UniFiler10.Data.Metadata"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="800"
	d:DataContext="{d:DesignData Type=metadata:MetaBriefcase, IsDesignTimeCreatable=True}">

	<ScrollViewer
        VerticalScrollBarVisibility="Auto"
		VerticalScrollMode="Enabled"
		HorizontalScrollBarVisibility="Auto"
		HorizontalScrollMode="Enabled"
		ZoomMode="Disabled">

		<!-- LOLLO NOTE these triggers must be put in the right place.
		For example, this does not work outside the ScrollViewer -->
		<!-- make all broader if the screen width allows it -->
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="State200">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1050"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="200.0"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="State250">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1200"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="250.0"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="State300">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1350"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="300.0"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="State350">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1500"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="350.0"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="State400">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1650"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="400.0"/>
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="State450">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="1800"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="me.MetaItemTextWidth" Value="450.0"/>
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
				<ColumnDefinition Width="1*"/>
			</Grid.ColumnDefinitions>

			<!-- categories -->
			<StackPanel Orientation="Vertical" Grid.Column="0">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock x:Uid="Categories"
                        VerticalAlignment="Center"
						Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
						TextWrapping="Wrap"/>
					<AppBarButton Grid.Column="2"
						Icon="Add"
                        IsCompact="True"
                        Click="OnAddCategory_Click"
                        VerticalAlignment="Center"/>
					<Rectangle Grid.Column="2"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
				</Grid>

				<ctl:TolerantListView
                    ItemsSource="{Binding Categories, Mode=OneWay}"
                    SelectedItem="{Binding CurrentCategory, Mode=OneWay}"
					ItemClick="OnCategoryListView_ItemClick"
					IsMultiSelectCheckBoxEnabled="False" 
                    IsItemClickEnabled="True"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<ItemsStackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<ctl:LolloTextBox
									Text="{Binding Name, Mode=TwoWay}"
                                    MaxLength="{StaticResource MaxTagLength}"
                                    VerticalAlignment="Center"
									BorderThickness="0"
									Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
									Style="{StaticResource LolloTextBoxStyle}"/>
								<AppBarButton Grid.Column="2"
									Icon="Zoom"
                                    IsCompact="True"
                                    Click="OnSelectCategory_Click"
                                    VerticalAlignment="Center"/>
								<AppBarButton Grid.Column="3"
									Icon="Delete"
                                    IsCompact="True"
                                    Click="OnDeleteCategory_Click"
									Foreground="{Binding IsJustAdded, Converter={StaticResource FalseToFlashyConverter}}"
                                    Visibility="{Binding IsJustAdded, Converter={StaticResource BooleanAndElevatedToVisible}}"
                                    VerticalAlignment="Center"/>
								<Rectangle Grid.Column="2"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
								<Rectangle Grid.Column="3"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ctl:TolerantListView>
			</StackPanel>

			<!-- field descriptions-->
			<StackPanel Orientation="Vertical" Grid.Column="1"
					Visibility="{Binding CurrentCategory, Converter={StaticResource IsNotNullToVisible}}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock x:Uid="FieldDescrsAssignedToCat"
						VerticalAlignment="Center"
						Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
						TextWrapping="Wrap"/>
					<Rectangle Grid.Column="2"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
					<Rectangle Grid.Column="3"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
				</Grid>

				<!-- assigned field descriptions -->
				<!-- LOLLO NOTE binding to the index makes trouble, better bind to the item. 
                Here, you have two lists that should look like one and have only one selected line
                between the two of them, so no selected item binding whatsoever:
                we need to do it in the code behind. -->
				<!-- LOLLO NOTE not only here, use ItemClick instead of SelectionChanged
				to be sure you only catch the user click and not the initial list filling -->
				<!--SelectedItem="{Binding CurrentFieldDescription, Mode=OneTime}"-->
				<ctl:TolerantListView
                    x:Name="AssignedLV"
                    ItemsSource="{Binding CurrentCategory.FieldDescriptions, Mode=OneWay}"
					ItemClick="OnAssignedFieldDescriptionsListView_ItemClick"
                    IsMultiSelectCheckBoxEnabled="False"
                    IsItemClickEnabled="True"
					SelectedItem="{Binding CurrentFieldDescription, Mode=OneWay}"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<!-- no virtualistion here or we lose the OnLoaded! -->
							<!--<ItemsStackPanel Orientation="Vertical"/>-->
							<StackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<ctl:LolloTextBox
									Text="{Binding Caption, Mode=TwoWay}"
                                    MaxLength="{StaticResource MaxTagLength}"
                                    VerticalAlignment="Center"
									BorderThickness="0"
									Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
									Style="{StaticResource LolloTextBoxStyle}"/>
								<AppBarButton Grid.Column="2"
									Icon="Zoom"
                                    IsCompact="True"
                                    Click="OnSelectAssignedFldDsc_Click"
                                    VerticalAlignment="Center"/>
								<AppBarButton Grid.Column="3"
									Icon="Remove"
                                    IsCompact="True"
                                    Click="OnAssignFieldFromCurrentCategory_Click"
									Loaded="OnFieldUnassignCommand_Loaded"
                                    VerticalAlignment="Center"/>
								<AppBarButton Grid.Column="4"
									Icon="Delete"
                                    IsCompact="True"
                                    Click="OnDeleteField_Click"
                                    Loaded="OnFieldDeleteCommand_Loaded"
                                    VerticalAlignment="Center"/>
								<Rectangle Grid.Column="2"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
								<Rectangle Grid.Column="3"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
								<Rectangle Grid.Column="4"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>

							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ctl:TolerantListView>

				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock x:Uid="FieldDescrsNotAssignedToCat"
                        VerticalAlignment="Center"
						Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
						TextWrapping="Wrap"/>
					<AppBarButton Grid.Column="2"
						Icon="Add"
                        IsCompact="True"
                        Click="OnAddField_Click"
                        VerticalAlignment="Center"/>
					<Rectangle Grid.Column="2"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
					<Rectangle Grid.Column="3"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
				</Grid>

				<!-- unassigned field descriptions -->
				<!--SelectedItem="{Binding CurrentFieldDescription, Mode=OneTime}"-->
				<ctl:TolerantListView
                    x:Name="UnassignedLV"
                    ItemsSource="{Binding ElementName=me, Path=VM.UnassignedFields, Mode=OneWay}"
					ItemClick="OnUnassignedFieldDescriptionsListView_ItemClick"
                    IsMultiSelectCheckBoxEnabled="False" 
                    IsItemClickEnabled="True"
					SelectedItem="{Binding CurrentFieldDescription, Mode=OneWay}"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<!-- no virtualistion here or we lose the OnLoaded! -->
							<!--<ItemsStackPanel Orientation="Vertical"/>-->
							<StackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<ctl:LolloTextBox
									Text="{Binding Caption, Mode=TwoWay}"
                                    MaxLength="{StaticResource MaxTagLength}"
                                    VerticalAlignment="Center"
									BorderThickness="0"
									Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
									Style="{StaticResource LolloTextBoxStyle}"/>
								<AppBarButton Grid.Column="2"
									Icon="Zoom"
                                    IsCompact="True"
                                    Click="OnSelectUnassignedFldDsc_Click"
                                    VerticalAlignment="Center"/>
								<AppBarButton Grid.Column="3"
									Icon="Accept"
                                    IsCompact="True"
                                    Click="OnAssignFieldToCurrentCat_Click"
                                    VerticalAlignment="Center"/>
								<AppBarButton Grid.Column="4"
									Icon="Delete"
                                    IsCompact="True"
                                    Click="OnDeleteField_Click"
									Loaded="OnFieldDeleteCommand_Loaded"
                                    VerticalAlignment="Center"/>
								<Rectangle Grid.Column="2"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
								<Rectangle Grid.Column="3"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
								<Rectangle Grid.Column="4"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ctl:TolerantListView>
			</StackPanel>

			<!-- field values -->
			<StackPanel Orientation="Vertical" Grid.Column="2"
				Visibility="{Binding CurrentFieldDescription, Converter={StaticResource IsNotNullToVisible}}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>

					<TextBlock x:Uid="PossibleFieldValues"
                        VerticalAlignment="Center"
						Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
						TextWrapping="Wrap"/>
					<AppBarButton Grid.Column="2"
						Icon="Add"
                        IsCompact="True"
                        Click="OnAddFieldValue_Click"
                        VerticalAlignment="Center"/>
					<Rectangle Grid.Column="2"
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>

				</Grid>

				<Grid>
					<CheckBox IsChecked="{Binding CurrentFieldDescription.IsAnyValueAllowed, Mode=TwoWay}"
						Foreground="{Binding CurrentFieldDescription.IsJustAdded, Converter={StaticResource FalseToFlashyConverter}}"
						IsEnabled="{Binding CurrentFieldDescription.IsJustAdded, Converter={StaticResource BooleanAndElevated}}"                   
						HorizontalAlignment="Left"
						VerticalAlignment="Center"
						VerticalContentAlignment="Center"
						BorderThickness="0"
						Style="{StaticResource CheckBoxLolloStyle}"
						Width="{Binding ElementName=me, Path=MetaItemTextWidth}">
						<CheckBox.Content>
							<TextBlock x:Uid="AllowAllFieldValues"
								MaxWidth="{Binding ElementName=me, Path=MetaItemTextWidth, Converter={StaticResource ReduceWidthForText}, ConverterParameter=40}"
								TextWrapping="Wrap"/>
						</CheckBox.Content>
					</CheckBox>
					<Rectangle
						Width="{StaticResource MetaItemHeight}"
						Height="{StaticResource MetaItemHeight}"/>
				</Grid>

				<ctl:TolerantListView x:Name="PossibleValuesLV"
                    ItemsSource="{Binding CurrentFieldDescription.PossibleValues, Mode=TwoWay}"
                    IsMultiSelectCheckBoxEnabled="False" 
                    IsItemClickEnabled="True"
					ScrollViewer.VerticalScrollBarVisibility="Disabled"
					ScrollViewer.HorizontalScrollBarVisibility="Disabled">
					<ItemsControl.ItemsPanel>
						<ItemsPanelTemplate>
							<ItemsStackPanel Orientation="Vertical"/>
						</ItemsPanelTemplate>
					</ItemsControl.ItemsPanel>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Small}"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>

								<ctl:LolloTextBox
									Text="{Binding Vaalue, Mode=TwoWay}"
                                    MaxLength="{StaticResource MaxVaalueLength}"
                                    VerticalAlignment="Center"
									BorderThickness="0"
									Width="{Binding ElementName=me, Path=MetaItemTextWidth}"
									Style="{StaticResource LolloTextBoxStyle}"/>
								<AppBarButton Grid.Column="2"
									Icon="Delete"
                                    IsCompact="True"
                                    Click="OnDeletePossibleValue_Click"
									Foreground="{Binding IsJustAdded, Converter={StaticResource FalseToFlashyConverter}}"
                                    Visibility="{Binding IsJustAdded, Converter={StaticResource BooleanAndElevatedToVisible}}"
                                    VerticalAlignment="Center"/>
								<Rectangle Grid.Column="2"
									Width="{StaticResource MetaItemHeight}"
									Height="{StaticResource MetaItemHeight}"/>
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ctl:TolerantListView>
			</StackPanel>
		</Grid>
	</ScrollViewer>
</ctl:ObservableControl>
