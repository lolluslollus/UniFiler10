<ctl:BackableOpenableObservableControl
	x:Class="UniFiler10.Views.BinderCoverView"
    x:Name="me"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UniFiler10.Views"
    xmlns:ctl="using:UniFiler10.Controlz"
    xmlns:utilz="using:Utilz"
	xmlns:vms="using:UniFiler10.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="800"
    d:DesignWidth="400"
    d:DataContext="{d:DesignInstance Type=vms:BinderCoverVM, IsDesignTimeCreatable=False}"
	DataContextChanged="OnDataContextChanged">

	<ctl:OpenableObservableControl.Resources>
		<Storyboard x:Name="UpdatingStoryboard" RepeatBehavior="Forever" >
			<ObjectAnimationUsingKeyFrames 
                Storyboard.TargetName="RefreshIcon" 
                Storyboard.TargetProperty="Visibility">
				<DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
			</ObjectAnimationUsingKeyFrames>

			<DoubleAnimationUsingKeyFrames 
                Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.Rotation)" 
                Storyboard.TargetName="RefreshIcon">
				<LinearDoubleKeyFrame KeyTime="0" Value="0"/>
				<LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="90"/>
				<LinearDoubleKeyFrame KeyTime="0:0:0.2" Value="180"/>
				<LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="270"/>
			</DoubleAnimationUsingKeyFrames>

			<!--<DoubleAnimationUsingKeyFrames 
                Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" 
                Storyboard.TargetName="RefreshIcon">
                <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames 
                Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" 
                Storyboard.TargetName="RefreshIcon">
                <LinearDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                <LinearDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
            </DoubleAnimationUsingKeyFrames>-->

			<!--<ObjectAnimationUsingKeyFrames 
                Storyboard.TargetName="RefreshIcon" 
                Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="Collapsed"/>
            </ObjectAnimationUsingKeyFrames>-->
			<!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="RefreshIcon">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-10"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="RefreshIcon">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-10"/>
            </DoubleAnimationUsingKeyFrames>-->
		</Storyboard>
	</ctl:OpenableObservableControl.Resources>

	<ScrollViewer>
		<Grid Background="LavenderBlush" x:Name="LayoutRoot" DataContext="{x:Bind VM, Mode=OneWay}">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<!-- animation for refresh -->
			<Viewbox
                Width="{StaticResource LandscapeItemHeight}"
                Height="{StaticResource LandscapeItemHeight}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Stretch="Uniform">
				<SymbolIcon x:Name="RefreshIcon" 
                        Symbol="Sync"
                        RenderTransformOrigin=".5, .5" 
                        Visibility="Collapsed"
                        Foreground="{StaticResource DiagonalNESWBrush}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="{StaticResource ButtonPadding}">
					<SymbolIcon.RenderTransform>
						<CompositeTransform Rotation="0"/>
					</SymbolIcon.RenderTransform>
				</SymbolIcon>
			</Viewbox>

			<!-- actions for all folders -->
			<VariableSizedWrapGrid Grid.Row="0"
                Orientation="Horizontal"
                Background="{Binding ElementName=AddButton, Path=Background, Mode=OneWay}"
                HorizontalAlignment="Stretch">

				<Button 
                    Tapped="OnAddFolder_Tapped"
                    Style="{StaticResource ButtonLolloStyle}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon Symbol="Add"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"/>
						<TextBlock Grid.Column="2" x:Uid="AddFolderT" 
							MaxWidth="{StaticResource LandscapeItemWidth}"
							TextWrapping="Wrap" 
							HorizontalAlignment="Left"/>
					</Grid>
				</Button>

				<Button 
                    Tapped="OnAddOpenFolder_Tapped"
                    Style="{StaticResource ButtonLolloStyle}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon Symbol="NewFolder"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"/>
						<TextBlock Grid.Column="2" x:Uid="AddOpenFolderT"
							MaxWidth="{StaticResource LandscapeItemWidth}"
							TextWrapping="Wrap" 
							HorizontalAlignment="Left"/>
					</Grid>
				</Button>

				<Button 
                    Tapped="OnSettingsButton_Tapped"
                    Style="{StaticResource ButtonLolloStyle}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon Symbol="Setting"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"/>
						<TextBlock Grid.Column="2" x:Uid="Settings1" 
							MaxWidth="{StaticResource LandscapeItemWidth}"
							TextWrapping="Wrap" 
							HorizontalAlignment="Left"/>
					</Grid>
				</Button>

				<Button
					Visibility="{Binding ElementName=me, Path=IsBackButtonAvailable, Converter={StaticResource BooleanToCollapsedConverter}}"
                    Tapped="OnBackButton_Tapped"
                    Style="{StaticResource ButtonLolloStyle}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon Symbol="Back"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"/>
						<TextBlock Grid.Column="2" x:Uid="Back"
							MaxWidth="{StaticResource LandscapeItemWidth}"
							TextWrapping="Wrap" 
							HorizontalAlignment="Left"/>
					</Grid>
				</Button>
			</VariableSizedWrapGrid>

			<!-- filter choosers -->
			<VariableSizedWrapGrid Grid.Row="1" Orientation="Horizontal">
				<!-- recent folders header -->
				<ToggleButton 
                    IsChecked="{Binding IsRecentFoldersPaneOpen, Mode=TwoWay}"
                    Style="{StaticResource ToggleButtonLolloStyle}">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon 
                            Symbol="View"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
                            Visibility="{Binding IsRecentFoldersPaneOpen, Converter={StaticResource BooleanToCollapsedConverter}}"/>
						<SymbolIcon 
                            Symbol="Up" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
                            Visibility="{Binding IsRecentFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}}"/>
						<TextBlock Grid.Column="2" 
                            x:Uid="RecentFolders"
							MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
                            TextWrapping="Wrap"
                            HorizontalAlignment="Left"
							VerticalAlignment="Center"/>
					</Grid>
				</ToggleButton>

				<!-- all folders header -->
				<ToggleButton 
						IsChecked="{Binding IsAllFoldersPaneOpen, Mode=TwoWay}"
						Style="{StaticResource ToggleButtonLolloStyle}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon 
                            Symbol="View"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"							
                            Visibility="{Binding IsAllFoldersPaneOpen, Converter={StaticResource BooleanToCollapsedConverter}}"/>
						<SymbolIcon 
                            Symbol="Up"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"							
                            Visibility="{Binding IsAllFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}}"/>
						<TextBlock Grid.Column="2" 
                            x:Uid="AllFolders"
							MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
                            TextWrapping="Wrap"
                            HorizontalAlignment="Left"
							VerticalAlignment="Center"/>
					</Grid>
				</ToggleButton>

				<!-- folders by category header -->
				<ToggleButton 
                    IsChecked="{Binding IsByCatFoldersPaneOpen, Mode=TwoWay}"
                    Style="{StaticResource ToggleButtonLolloStyle}">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon 
							Symbol="View" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
							Visibility="{Binding IsByCatFoldersPaneOpen, Converter={StaticResource BooleanToCollapsedConverter}}"/>
						<SymbolIcon 
							Symbol="Up"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
							Visibility="{Binding IsByCatFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}}"/>
						<TextBlock Grid.Column="2"
							MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
                            x:Uid="ByCatFolders" 
                            TextWrapping="Wrap"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"/>
					</Grid>
				</ToggleButton>

				<!-- folders by field header -->
				<ToggleButton 
                    IsChecked="{Binding IsByFldFoldersPaneOpen, Mode=TwoWay}"
                    Style="{StaticResource ToggleButtonLolloStyle}">

					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="{StaticResource LandscapeItemHeight_ForGrid}"/>
							<ColumnDefinition Width="{StaticResource GridSize4Placeholder_Medium}"/>
							<ColumnDefinition Width="{StaticResource LandscapeItemWidth_ForGrid}"/>
						</Grid.ColumnDefinitions>

						<SymbolIcon 
							Symbol="View" 
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
							Visibility="{Binding IsByFldFoldersPaneOpen, Converter={StaticResource BooleanToCollapsedConverter}}"/>
						<SymbolIcon 
							Symbol="Up"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Width="{StaticResource LandscapeItemHeight}"
							Height="{StaticResource LandscapeItemHeight}"
							Visibility="{Binding IsByFldFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}}"/>
						<TextBlock Grid.Column="2"
							MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
                            x:Uid="ByFldFolders" 
                            TextWrapping="Wrap"
							HorizontalAlignment="Left"
							VerticalAlignment="Center"/>
					</Grid>
				</ToggleButton>
			</VariableSizedWrapGrid>

			<!-- cat filter parameters -->
			<!--VerticalAlignment="Center"-->
			<ctl:LolloTextBox Grid.Row="2"
				HorizontalAlignment="Left"
				BorderThickness="0"
				Width="{StaticResource LandscapeItemWidth}"
				MinHeight="{StaticResource LandscapeItemHeight}"
				Style="{StaticResource LolloTextBoxStyle}"
				IsReadOnly="True"
				IsEmptyValueAllowedEvenIfNotInList="False"
				Visibility="{Binding IsByCatFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}"
				ItemsSource="{Binding MetaBriefcase.Categories, Mode=OneWay}"
				DisplayMemberPath="Name"
				Text="{Binding CatNameForCatFilter, Mode=TwoWay}">
				<ctl:LolloTextBox.ListItemTemplate>
					<DataTemplate>
						<Grid Width="{StaticResource LandscapeItemWidth}">
							<TextBlock Text="{Binding Name}"
								MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
								Margin="{StaticResource PanelPadding8282}"
								TextWrapping="Wrap"/>
						</Grid>
					</DataTemplate>
				</ctl:LolloTextBox.ListItemTemplate>
			</ctl:LolloTextBox>

			<!-- fld filter parameters -->
			<VariableSizedWrapGrid Grid.Row="2" 
				Orientation="Horizontal"
				Visibility="{Binding IsByFldFoldersPaneOpen, Converter={StaticResource BooleanToVisibleConverter}, Mode=OneWay}">
				<!--VerticalAlignment="Center"-->
				<ctl:LolloTextBox
					BorderThickness="0"
					Width="{StaticResource LandscapeItemWidth}"
					MinHeight="{StaticResource LandscapeItemHeight}"
					Style="{StaticResource LolloTextBoxStyle}"
					IsReadOnly="True"
					IsEmptyValueAllowedEvenIfNotInList="False"
					ItemsSource="{Binding MetaBriefcase.Categories, Mode=OneWay}"
					DisplayMemberPath="Name"
					Text="{Binding CatNameForFldFilter, Mode=TwoWay}">
					<ctl:LolloTextBox.ListItemTemplate>
						<DataTemplate>
							<Grid Width="{StaticResource LandscapeItemWidth}">
								<TextBlock Text="{Binding Name}"
									MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
									Margin="{StaticResource PanelPadding8282}"
									TextWrapping="Wrap"/>
							</Grid>
						</DataTemplate>
					</ctl:LolloTextBox.ListItemTemplate>
				</ctl:LolloTextBox>

				<!--VerticalAlignment="Center"-->
				<ctl:LolloTextBox
					BorderThickness="0"
					Width="{StaticResource LandscapeItemWidth}"
					MinHeight="{StaticResource LandscapeItemHeight}"
					Style="{StaticResource LolloTextBoxStyle}"
					IsReadOnly="True"
					IsEmptyValueAllowedEvenIfNotInList="False"
					ItemsSource="{Binding FldDscsInCat, Mode=OneWay}"
					DisplayMemberPath="Caption"
					Text="{Binding FldDscCaptionForFldFilter, Mode=TwoWay}">
					<ctl:LolloTextBox.ListItemTemplate>
						<DataTemplate>
							<Grid Width="{StaticResource LandscapeItemWidth}">
								<TextBlock Text="{Binding Caption}"
									MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
									Margin="{StaticResource PanelPadding8282}"
									TextWrapping="Wrap"/>
							</Grid>
						</DataTemplate>
					</ctl:LolloTextBox.ListItemTemplate>
				</ctl:LolloTextBox>

				<!--VerticalAlignment="Center"-->
				<ctl:LolloTextBox
					BorderThickness="0"
					Width="{StaticResource LandscapeItemWidth}"
					MinHeight="{StaticResource LandscapeItemHeight}"
					Style="{StaticResource LolloTextBoxStyle}"
					IsReadOnly="True"
					IsEmptyValueAllowedEvenIfNotInList="False"
					ItemsSource="{Binding FldValsInFldDscs, Mode=OneWay}"
					DisplayMemberPath="Vaalue"
					Text="{Binding FldValVaalueForFldFilter, Mode=TwoWay}">
					<ctl:LolloTextBox.ListItemTemplate>
						<DataTemplate>
							<Grid Width="{StaticResource LandscapeItemWidth}">
								<TextBlock Text="{Binding Vaalue}"
									MaxWidth="{StaticResource LandscapeItemWidthMinusPanelPadding}"
									Margin="{StaticResource PanelPadding8282}"
									TextWrapping="Wrap"/>
							</Grid>
						</DataTemplate>
					</ctl:LolloTextBox.ListItemTemplate>
				</ctl:LolloTextBox>
			</VariableSizedWrapGrid>

			<!-- folders grid -->
			<ctl:TolerantListView Grid.Row="3"
                ItemsSource="{Binding FolderPreviews}"
                IsItemClickEnabled="True"
                IsMultiSelectCheckBoxEnabled="False"
                ItemClick="OnFolderPreviews_ItemClick"
                ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollMode="Disabled">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<ItemsWrapGrid Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="{StaticResource MiniatureHeight_ForGrid}"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="{StaticResource MiniatureWidth_ForGrid}"/>
							</Grid.ColumnDefinitions>

							<Viewbox Canvas.ZIndex="200"
        						Stretch="Uniform" StretchDirection="DownOnly"
        						VerticalAlignment="Bottom" HorizontalAlignment="Center"
        						MaxHeight="{StaticResource MiniatureQuarterHeight}">
								<TextBlock
        							Text="{Binding FolderName}"
        							Foreground="{StaticResource FlashyForeground}" 
        							HorizontalAlignment="Stretch"
        							TextWrapping="Wrap"
        							MaxWidth="{StaticResource MiniatureWidth}"/>
							</Viewbox>

							<local:DocumentView Canvas.ZIndex="100"
        						IsDeleteEnabled="False"
        						DataContext="{Binding Document, Mode=OneWay}"/>

							<AppBarButton Icon="Delete"
								Tapped="OnDeleteFolder_Tapped"
								Canvas.ZIndex="200"
								Style="{StaticResource AppBarButtonRecoloured}"
								IsCompact="True"
								Foreground="{StaticResource FlashyForeground}"
								Opacity="1"
								HorizontalAlignment="Right" VerticalAlignment="Top"/>
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ctl:TolerantListView>
		</Grid>
	</ScrollViewer>
</ctl:BackableOpenableObservableControl>
